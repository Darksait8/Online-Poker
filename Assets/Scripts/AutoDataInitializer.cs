using UnityEngine;

[System.Serializable]
public class AutoDataInitializer : MonoBehaviour
{
    [Header("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è")]
    [SerializeField] private bool initializeOnAwake = true;
    [SerializeField] private bool showDebugMessages = true;
    
    private void Awake()
    {
        if (initializeOnAwake)
        {
            InitializeDataSystem();
        }
    }
    
    private void Start()
    {
        if (!initializeOnAwake)
        {
            InitializeDataSystem();
        }
    }
    
    /// <summary>
    /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –¥–∞–Ω–Ω—ã—Ö
    /// </summary>
    public void InitializeDataSystem()
    {
        try
        {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –¥–∞–Ω–Ω—ã—Ö
            UserDataManager.Initialize();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            AuthManager.Initialize();
            
            if (showDebugMessages)
            {
                Debug.Log("‚úÖ Data System auto-initialized successfully");
                Debug.Log($"üìä Data Info: {AuthManager.GetDataInfo()}");
            }
        }
        catch (System.Exception e)
        {
            Debug.LogError($"‚ùå Failed to auto-initialize data system: {e.Message}");
        }
    }
    
    /// <summary>
    /// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (–º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏–∑ –∫–æ–¥–∞)
    /// </summary>
    [ContextMenu("Initialize Data System")]
    public void ForceInitialize()
    {
        InitializeDataSystem();
    }
}
