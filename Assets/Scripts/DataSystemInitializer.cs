using UnityEngine;

public class DataSystemInitializer : MonoBehaviour
{
    [Header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")]
    [SerializeField] private bool initializeOnStart = true;
    [SerializeField] private bool showDebugInfo = true;
    
    private void Start()
    {
        if (initializeOnStart)
        {
            InitializeDataSystem();
        }
    }
    
    /// <summary>
    /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –¥–∞–Ω–Ω—ã—Ö
    /// </summary>
    public void InitializeDataSystem()
    {
        try
        {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –¥–∞–Ω–Ω—ã—Ö
            UserDataManager.Initialize();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            AuthManager.Initialize();
            
            if (showDebugInfo)
            {
                Debug.Log("‚úÖ Data System initialized successfully");
                Debug.Log($"üìä Data Info: {AuthManager.GetDataInfo()}");
                
                if (AuthManager.IsLoggedIn)
                {
                    var user = AuthManager.CurrentUser;
                    Debug.Log($"üë§ User logged in: {user.username}");
                    Debug.Log($"üí∞ Chips: {user.chips}");
                    Debug.Log($"üéÆ Games played: {user.totalGamesPlayed}");
                }
                else
                {
                    Debug.Log("üë§ No user logged in");
                }
            }
        }
        catch (System.Exception e)
        {
            Debug.LogError($"‚ùå Failed to initialize data system: {e.Message}");
        }
    }
    
    /// <summary>
    /// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    /// </summary>
    public void SaveAllData()
    {
        AuthManager.SaveCurrentUser();
        Debug.Log("üíæ All user data saved");
    }
    
    /// <summary>
    /// –û—á–∏—â–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    /// </summary>
    public void ClearAllData()
    {
        AuthManager.ClearAllUserData();
        Debug.Log("üóëÔ∏è All user data cleared");
    }
    
    /// <summary>
    /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ –¥–∞–Ω–Ω—ã—Ö
    /// </summary>
    public void ShowDataInfo()
    {
        Debug.Log($"üìä Data System Info: {AuthManager.GetDataInfo()}");
    }
    
    /// <summary>
    /// –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    /// </summary>
    public void CreateTestUser()
    {
        AuthManager.Register("testuser", "test@example.com", "password123", "password123");
        Debug.Log("üß™ Test user created: testuser / password123");
    }
    
    /// <summary>
    /// –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–≥—Ä–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    /// </summary>
    public void UpdateTestGameStats()
    {
        if (AuthManager.IsLoggedIn)
        {
            AuthManager.UpdateGameStats(true, 1000, 0); // –í—ã–∏–≥—Ä–∞–ª 1000 —Ñ–∏—à–µ–∫
            Debug.Log("üéÆ Test game stats updated");
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è No user logged in to update stats");
        }
    }
    
    private void OnApplicationPause(bool pauseStatus)
    {
        if (pauseStatus)
        {
            SaveAllData();
        }
    }
    
    private void OnApplicationFocus(bool hasFocus)
    {
        if (!hasFocus)
        {
            SaveAllData();
        }
    }
    
    private void OnDestroy()
    {
        SaveAllData();
    }
}
